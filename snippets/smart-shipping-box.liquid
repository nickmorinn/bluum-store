{%- comment -%}
----------------------------------------------------------------------------------------------------------------------
SMART SHIPPING BOX
----------------------------------------------------------------------------------------------------------------------

Reusable badge showing estimated ship date and localized shipping copy.

Parameters (all optional):
- shipping_box_background_color
- shipping_box_border_radius
- shipping_box_padding
- shipping_box_box_shadow
- shipping_box_font_size
- shipping_box_text_color
- shipping_box_gap
- shipping_box_margin_top
- shipping_box_margin_bottom
- shipping_dot_size
- shipping_dot_color
- shipping_flag_size
- shipping_badge_days
- shipping_badge_date_format
{%- endcomment -%}

{%- assign shipping_box_background_color = shipping_box_background_color | default: '#fffdfa' -%}
{%- assign shipping_box_border_radius = shipping_box_border_radius | default: '9999px' -%}
{%- assign shipping_box_padding = shipping_box_padding | default: '8px 20px' -%}
{%- assign shipping_box_box_shadow = shipping_box_box_shadow | default: '0 2px 8px rgba(0,0,0,0.1)' -%}
{%- assign shipping_box_font_size = shipping_box_font_size | default: 'clamp(11px, 2.5vw, 14px)' -%}
{%- assign shipping_box_text_color = shipping_box_text_color | default: '#24211f' -%}
{%- assign shipping_box_gap = shipping_box_gap | default: '14px' -%}
{%- assign shipping_box_margin_top = shipping_box_margin_top | default: '0px' -%}
{%- assign shipping_box_margin_bottom = shipping_box_margin_bottom | default: '0px' -%}
{%- assign shipping_dot_size = shipping_dot_size | default: '10px' -%}
{%- assign shipping_dot_color = shipping_dot_color | default: '#c8dae8' -%}
{%- assign shipping_flag_size = shipping_flag_size | default: '18px' -%}
{%- assign shipping_badge_days = shipping_badge_days | default: '1' -%}
{%- assign shipping_badge_date_format = shipping_badge_date_format | default: 'short' -%}

<div
  class="smart-shipping-box"
  data-smart-shipping-box
  data-shipping-days="{{ shipping_badge_days }}"
  data-date-format="{{ shipping_badge_date_format }}"
  style="
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: {{ shipping_box_background_color }};
    border-radius: {{ shipping_box_border_radius }};
    padding: {{ shipping_box_padding }};
    box-shadow: {{ shipping_box_box_shadow }};
    font-size: {{ shipping_box_font_size }};
    color: {{ shipping_box_text_color }};
    gap: {{ shipping_box_gap }};
    width: fit-content;
    max-width: 95vw;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    margin: {{ shipping_box_margin_top }} auto {{ shipping_box_margin_bottom }} auto;
  "
>
  <div style="display: flex; align-items: center; gap: 6px;">
    <div
      class="smart-shipping-box__dot"
      style="
        width: {{ shipping_dot_size }};
        height: {{ shipping_dot_size }};
        background-color: {{ shipping_dot_color }};
        border-radius: 50%;
        flex-shrink: 0;
      "
    ></div>
    <div>Ships by <span data-shipping-badge-date style="font-weight: 600;">...</span></div>
  </div>
  <div style="display: flex; align-items: center; gap: 6px;">
    <img
      data-shipping-badge-flag
      src="https://upload.wikimedia.org/wikipedia/en/a/a4/Flag_of_the_United_States.svg"
      alt="Flag"
      style="width: {{ shipping_flag_size }}; height: {{ shipping_flag_size }}; border-radius: 50%; object-fit: cover; flex-shrink: 0;"
    >
    <div data-shipping-badge-text style="font-weight: 600;">FREE Shipping</div>
  </div>
</div>

{%- unless smart_shipping_box_styles_rendered -%}
  {%- assign smart_shipping_box_styles_rendered = true -%}
  <style>
    @keyframes smartShippingBoxPulse {
      0% { opacity: 1; transform: scale(1); }
      50% { opacity: 0.4; transform: scale(1.2); }
      100% { opacity: 1; transform: scale(1); }
    }

    .smart-shipping-box__dot {
      animation: smartShippingBoxPulse 1.2s infinite ease-in-out;
    }
  </style>
{%- endunless -%}

{%- unless smart_shipping_box_script_rendered -%}
  {%- assign smart_shipping_box_script_rendered = true -%}
  <script>
    (function() {
      function forEachNode(list, handler) {
        Array.prototype.forEach.call(list, handler);
      }

      function isWeekend(date) {
        var day = date.getDay();
        return day === 0 || day === 6;
      }

      function nextBusinessDay(date) {
        var result = new Date(date);
        while (isWeekend(result)) {
          result.setDate(result.getDate() + 1);
        }
        return result;
      }

      function addBusinessDays(startDate, days) {
        var result = new Date(startDate);
        var remaining = parseInt(days, 10);
        if (isNaN(remaining) || remaining < 0) {
          remaining = 0;
        }

        if (remaining === 0) {
          return isWeekend(result) ? nextBusinessDay(result) : result;
        }

        while (remaining > 0) {
          result.setDate(result.getDate() + 1);
          if (!isWeekend(result)) {
            remaining -= 1;
          }
        }

        return result;
      }

      function formatShipDate(date, format) {
        var formats = {
          'long': { weekday: 'long', month: 'long', day: 'numeric' },
          'numeric': { month: '2-digit', day: '2-digit', year: 'numeric' },
          'day': { weekday: 'long' },
          'date': { month: 'short', day: 'numeric' },
          'short': { weekday: 'short', month: 'long', day: 'numeric' }
        };

        var options = formats[format] || formats.short;
        try {
          return date.toLocaleDateString('en-US', options);
        } catch (e) {
          return date.toDateString();
        }
      }

      function updateBox(box) {
        var dateEl = box.querySelector('[data-shipping-badge-date]');
        var flagEl = box.querySelector('[data-shipping-badge-flag]');
        var textEl = box.querySelector('[data-shipping-badge-text]');

        var days = parseInt(box.getAttribute('data-shipping-days'), 10);
        if (isNaN(days) || days < 0) {
          days = 0;
        }

        var shipDate = addBusinessDays(new Date(), days);

        if (dateEl) {
          var format = box.getAttribute('data-date-format') || 'short';
          dateEl.textContent = formatShipDate(shipDate, format);
        }

        if (flagEl) {
          flagEl.src = 'https://upload.wikimedia.org/wikipedia/en/a/a4/Flag_of_the_United_States.svg';
          flagEl.alt = 'United States flag';
        }

        if (textEl) {
          textEl.textContent = 'FREE Shipping';
        }
      }

      function init(root) {
        var scope = root && root.querySelectorAll ? root : document;
        var boxes = scope.querySelectorAll('[data-smart-shipping-box]');
        if (!boxes.length) return;
        forEachNode(boxes, updateBox);
      }

      if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', init);
      } else {
        init();
      }

      if ('MutationObserver' in window) {
        var observer = new MutationObserver(function(mutations) {
          forEachNode(mutations, function(mutation) {
            forEachNode(mutation.addedNodes || [], function(node) {
              if (!(node instanceof Element)) return;

              if (node.matches && node.matches('[data-smart-shipping-box]')) {
                updateBox(node);
              }

              if (node.querySelectorAll) {
                var nested = node.querySelectorAll('[data-smart-shipping-box]');
                forEachNode(nested, updateBox);
              }
            });
          });
        });

        observer.observe(document.documentElement, { childList: true, subtree: true });
      }
    })();
  </script>
{%- endunless -%}
